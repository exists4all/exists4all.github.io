<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Exists4All</title>
    <link>https://exists4all.github.io/posts/</link>
    <description>Recent content in Posts on Exists4All</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Mar 2024 16:56:22 +0330</lastBuildDate>
    <atom:link href="https://exists4all.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SimpePECrypter</title>
      <link>https://exists4all.github.io/posts/simpepecrypter/</link>
      <pubDate>Tue, 19 Mar 2024 16:56:22 +0330</pubDate>
      <guid>https://exists4all.github.io/posts/simpepecrypter/</guid>
      <description>So it was a while since I did this project, however for some reason I wasn&amp;rsquo;t able to publish it. You can download the tutorial in the PDF format with necessary files here. And the password for the file is:&#xA;SimpePECrypter&#xD;And finally download the source code from github.&#xA;Note that I did this project in a little bit of a rush, so there are little mistakes here and there. But the results are good enough.</description>
    </item>
    <item>
      <title>On The Cryptoapi</title>
      <link>https://exists4all.github.io/posts/on_the_cryptoapi/</link>
      <pubDate>Sun, 17 Mar 2024 23:00:30 +0330</pubDate>
      <guid>https://exists4all.github.io/posts/on_the_cryptoapi/</guid>
      <description>I had to work on a PE for reverse engineering for a few weeks, the PE using an extensive amount of encryption/decryption of memory fragments to make it harder to reverse engineer it. However, that PE is for another time. But I had to write a manual encrypter/decrypter for those memory fragments to be able to patch some specific parts without changing instructions size and then crypting those bytes and replacing those specific memory fragments.</description>
    </item>
    <item>
      <title>Simple Disk Serial Spoofer part 1</title>
      <link>https://exists4all.github.io/posts/simple_disk_serial_spoofer_part_1/</link>
      <pubDate>Sun, 17 Mar 2024 07:37:04 +0330</pubDate>
      <guid>https://exists4all.github.io/posts/simple_disk_serial_spoofer_part_1/</guid>
      <description>In this tutorial we are going to create a static disk drive serial number spoofer. This project will be a little long and need some basic knowledge about operation systems and reverse engineering. We are going to use visual studio community, IDA and windbg and I used windows 11 enterprise.&#xA;The first step is to find out how windows get that information. By googling you can see easily you have to use wmic commands.</description>
    </item>
    <item>
      <title>Before Start</title>
      <link>https://exists4all.github.io/posts/before_start/</link>
      <pubDate>Sun, 17 Mar 2024 06:36:21 +0330</pubDate>
      <guid>https://exists4all.github.io/posts/before_start/</guid>
      <description>Welcome to my kernel programming tutorial document. Be sure to read these notes before starting.&#xA;Kernel programming is not anything like user mode programming, information about its structure is very limited and most of the time you have to dig very deep into MSDN documentation to understand where you need to start.&#xA;Kernel mode codes have to be perfect, any flaw in them will cause serious problems and most of the time lead to BSOD ( blue screen of death) if they are not treated perfectly.</description>
    </item>
  </channel>
</rss>
